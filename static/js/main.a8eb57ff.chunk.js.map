{"version":3,"sources":["redux/actions.js","redux/redusers.js","components/header/Header.js","components/footer/Footer.js","App.js","serviceWorker.js","components/main/home/home.js","components/main/contacts/contacts.js","components/main/posts/posts.js","components/main/posts/postsHandler.js","components/main/posts/comments.js","components/main/posts/post.js","components/main/posts/postHandler.js","components/error.js","index.js"],"names":["DISPLAY_POSTS","DISPLAY_POST","CLEAR_POST","loadPosts","dispatch","fetch","then","res","json","data","type","posts","loadPost","id","post","initialState","HeaderStyle","styled","header","Ul","ul","Li","li","Header","props","exact","to","FooterStyle","footer","Footer","className","store","createStore","state","action","applyMiddleware","thunk","App","children","Boolean","window","location","hostname","match","home","contacts","this","Main","main","Div","div","P","p","Span","span","H3","h3","map","item","key","title","author","Date","date","toUTCString","Component","postsHandler","connect","Comments","comments","body","params","creator","postHandler","console","log","error","ReactDOM","render","path","component","Home","Contacts","Posts","Post","Error","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8eb57ff.chunk.js","sourcesContent":["export const DISPLAY_POSTS = 'display_posts';\r\nexport const DISPLAY_POST = 'display_post';\r\nexport const CLEAR_POST = 'clear_post';\r\n\r\nexport function loadPosts() {\r\n  return (dispatch) => {\r\n  fetch('https://simple-blog-api.crew.red/posts')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      dispatch(displayPosts(data));\r\n    })\r\n  };\r\n}\r\n\r\nexport function displayPosts(posts) {\r\n  return {\r\n    type: DISPLAY_POSTS,\r\n    posts\r\n  };\r\n}\r\n\r\nexport function loadPost(id) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_POST,\r\n    });\r\n  fetch(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      dispatch(displayPost(data));\r\n    })\r\n  };\r\n}\r\n\r\nexport function displayPost(post) {\r\n  return {\r\n    type: DISPLAY_POST,\r\n    post\r\n  };\r\n}\r\n","import { DISPLAY_POSTS, DISPLAY_POST, CLEAR_POST } from './actions';\r\n\r\nconst initialState = {\r\n  posts: null,\r\n  post: null,\r\n}\r\n\r\nexport default function getNextState(state = initialState, action) {\r\n  switch (action.type) {\r\n    case DISPLAY_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.posts,\r\n      };\r\n    case DISPLAY_POST:\r\n      return {\r\n        ...state,\r\n        post: action.post,\r\n      };\r\n    case CLEAR_POST:\r\n      return {\r\n        ...state,\r\n        post: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderStyle = styled.header`\r\n  background: #b0251e;\r\n  border-radius: 0 0 10px 10px;\r\n  box-shadow: 0 2px 13px #000000;\r\n  \r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  list-style: none;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  padding: 15px;\r\n`;\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <HeaderStyle>\r\n      <nav>\r\n        <Ul>\r\n          <Li><NavLink exact to='/'>Home</NavLink></Li>\r\n          <Li><NavLink to='/posts'>Posts</NavLink></Li>\r\n          <Li><NavLink to='/contacts'>Contacts</NavLink></Li>\r\n        </Ul>\r\n      </nav>\r\n    </HeaderStyle>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterStyle = styled.footer`\r\n  background: #b0251e;\r\n  color: #fff;\r\n  box-shadow: 0 -2px 13px #000000;\r\n  border-radius: 10px 10px 0 0;\r\n  padding: 15px;\r\n`;\r\nfunction Footer() {\r\n  return (\r\n    <FooterStyle className=\"footer\">\r\n      <p>Footer</p>\r\n    </FooterStyle>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport { createStore, applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport styled from 'styled-components';\n\nimport getNextState from './redux/redusers';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport './App.css';\nconst store = createStore(getNextState, applyMiddleware(thunk));\n\n\nfunction App({ children }) {\n  return (\n    <Provider store={store}>\n        <div className=\"content\">\n          <Header />\n          {children}\n        </div>\n        <Footer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nfunction home() {\r\n  return (\r\n    <div>\r\n      <h3>home pages</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","import React from 'react';\r\n\r\nfunction contacts() {\r\n  return (\r\n    <div>\r\n      <h3>contacts pages</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default contacts;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nclass posts extends Component{\r\n\r\n  componentDidMount() {\r\n    this.props.loadPosts()\r\n  }\r\n\r\n  render() {\r\n    const Main = styled.main`\r\n      margin: 0 10% 0 10%;\r\n      margin-top: 1%;\r\n      padding: 1%;\r\n      display: grid;\r\n      grid-template-columns: repeat(3, auto);\r\n      grid-template-rows: auto;\r\n      grid-column-gap: 10px;\r\n      grid-row-gap: 15px;\r\n    `;\r\n\r\n    const Div = styled.div`\r\n        background: #fffcfc;\r\n        padding: 10px;\r\n        transition: 0.2s;\r\n        &:hover h3{\r\n          background: #b0251e;;\r\n          color: #fff;\r\n          border-radius: 5px;\r\n        }\r\n        &:hover {\r\n          box-shadow: 0 2px 13px #000000;\r\n          border-radius: 5px;\r\n        }\r\n    `;\r\n\r\n    const P = styled.p`\r\n      font-style: italic;\r\n      margin: 5px;\r\n    `;\r\n\r\n    const Span = styled.span`\r\n      background: #53bd80;\r\n      color: inherit;\r\n      padding: 0 5px;\r\n      border-radius: 5px;\r\n    `;\r\n\r\n    const H3 = styled.h3`\r\n      display: block;\r\n      padding: 5px;\r\n      transition: 0.2s;\r\n    `;\r\n\r\n    return (\r\n      <Main>\r\n          {this.props.posts === null ? <Div>Please waite</Div> : this.props.posts.map(item =>\r\n            <Div key={item.id}>\r\n              <Link to={`/posts/${item.id}?_embed=comments`}>\r\n                <H3>{item.title}</H3>\r\n                <P>Author: {'author' in item? <Span>{item.author}</Span> : <Span>Unknown</Span>}</P>\r\n                <P>Date: {\"date\" in item ? <Span>{new Date(`${item.date}`).toUTCString()}</Span> : <Span>Unknown</Span>}</P>\r\n              </Link>\r\n            </Div>\r\n          )}\r\n      </Main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default posts;\r\n","import { connect } from 'react-redux';\r\n\r\nimport posts from './posts';\r\nimport { loadPosts } from '../../../redux/actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n      loadPosts: () => dispatch(loadPosts()),\r\n  };\r\n}\r\n\r\nconst postsHandler = connect(mapStateToProps, mapDispatchToProps)(posts);\r\nexport default postsHandler;\r\n","import React from 'react';\r\n\r\nfunction Comments(props) {\r\n  return (\r\n    <div>\r\n      {props.comments.map(item => <p className=\"comment\" key={item.id}>{item.body}</p>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component } from 'react';\r\nimport Comments from './comments';\r\n\r\nclass post extends Component{\r\n  componentDidMount() {\r\n    this.props.loadPost(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n          { this.props.post === null ? <li>Please waite</li> :\r\n            <div className=\"post\">\r\n              <h3>{this.props.post.title}</h3>\r\n              <p>Author: {\"creator\" in this.props.post ? this.props.post.creator : 'Unknown'}</p>\r\n              <p>Date: {\"date\" in this.props.post ? <span>{new Date(`${this.props.post.date}`).toUTCString()}</span> : 'Unknown'}</p>\r\n              <p>{\"body\" in this.props.post ? this.props.post.body : null}</p>\r\n              <h3>Comments</h3>\r\n              {\"comments\" in this.props.post && this.props.post.comments !== [] ?  <Comments comments={this.props.post.comments} /> : ''}\r\n            </div>\r\n          }\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import { connect } from 'react-redux';\r\n\r\nimport post from './post';\r\nimport { loadPost } from '../../../redux/actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.post)\r\n  return {\r\n    post: state.post,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n      loadPost: (id) => dispatch(loadPost(id)),\r\n  };\r\n}\r\n\r\nconst postHandler = connect(mapStateToProps, mapDispatchToProps)(post);\r\nexport default postHandler;\r\n","import React from 'react';\r\n\r\nfunction error() {\r\n  return (\r\n    <div>\r\n      <h3>Invalid URL</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default error;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/main/home/home';\nimport Contacts from './components/main/contacts/contacts';\nimport Posts from './components/main/posts/postsHandler';\nimport Post from './components/main/posts/postHandler';\nimport Error from './components/error';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route path='/contacts' component={Contacts}/>\n        <Route exact path='/posts' component={Posts}/>\n        <Route path='/posts/:id' component={Post}/>\n        <Route path='*' component={Error} />\n      </Switch>\n    </App>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}